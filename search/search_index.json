{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GitOps Toolkit \u00b6 The GitOps Toolkit is a set of composable APIs and specialized tools that can be used to build a Continuous Delivery platform on top of Kubernetes. These tools are built with Kubernetes controller-runtime libraries and they can be dynamically configured with Kubernetes custom resources either by cluster admins or by other automated tools. The GitOps Toolkit components interact with each other via Kubernetes events and are responsible for the reconciliation of their designated API objects. Components: Toolkit CLI Source Controller Kustomize Controller To get started with the toolkit please follow this guide .","title":"Introduction"},{"location":"#gitops-toolkit","text":"The GitOps Toolkit is a set of composable APIs and specialized tools that can be used to build a Continuous Delivery platform on top of Kubernetes. These tools are built with Kubernetes controller-runtime libraries and they can be dynamically configured with Kubernetes custom resources either by cluster admins or by other automated tools. The GitOps Toolkit components interact with each other via Kubernetes events and are responsible for the reconciliation of their designated API objects. Components: Toolkit CLI Source Controller Kustomize Controller To get started with the toolkit please follow this guide .","title":"GitOps Toolkit"},{"location":"cmd/tk/","text":"tk \u00b6 Command line utility for assembling Kubernetes CD pipelines Synopsis \u00b6 Command line utility for assembling Kubernetes CD pipelines the GitOps way. Examples \u00b6 # Check prerequisites tk check --pre # Install the latest version of the toolkit tk install --version=master # Create a source from a public Git repository tk create source git webapp-latest \\ --url=https://github.com/stefanprodan/podinfo \\ --branch=master \\ --interval=3m # List git sources and their status tk get sources git # Trigger a git sync tk sync source git webapp-latest # Export git sources in YAML format tk export source git --all > sources.yaml # Create a kustomization for deploying a series of microservices tk create kustomization webapp-dev \\ --source=webapp-latest \\ --path=\"./deploy/webapp/\" \\ --prune=true \\ --interval=5m \\ --validate=client \\ --health-check=\"Deployment/backend.webapp\" \\ --health-check=\"Deployment/frontend.webapp\" \\ --health-check-timeout=2m # Trigger a git sync and apply changes if any tk sync kustomization webapp-dev --with-source # Suspend a kustomization reconciliation tk suspend kustomization webapp-dev # Export kustomizations in YAML format tk export kustomization --all > kustomizations.yaml # Resume a kustomization reconciliation tk resume kustomization webapp-dev # Delete a kustomization tk delete kustomization webapp-dev # Delete a git source tk delete source git webapp-latest # Uninstall the toolkit and delete CRDs tk uninstall --crds Options \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) -h, --help help for tk --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk bootstrap - Bootstrap commands tk check - Check requirements and installation tk completion - Generates bash completion scripts tk create - Create commands tk delete - Delete commands tk export - Export commands tk get - Get commands tk install - Install the toolkit components tk resume - Resume commands tk suspend - Suspend commands tk sync - Synchronize commands tk uninstall - Uninstall the toolkit components Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk"},{"location":"cmd/tk/#tk","text":"Command line utility for assembling Kubernetes CD pipelines","title":"tk"},{"location":"cmd/tk/#synopsis","text":"Command line utility for assembling Kubernetes CD pipelines the GitOps way.","title":"Synopsis"},{"location":"cmd/tk/#examples","text":"# Check prerequisites tk check --pre # Install the latest version of the toolkit tk install --version=master # Create a source from a public Git repository tk create source git webapp-latest \\ --url=https://github.com/stefanprodan/podinfo \\ --branch=master \\ --interval=3m # List git sources and their status tk get sources git # Trigger a git sync tk sync source git webapp-latest # Export git sources in YAML format tk export source git --all > sources.yaml # Create a kustomization for deploying a series of microservices tk create kustomization webapp-dev \\ --source=webapp-latest \\ --path=\"./deploy/webapp/\" \\ --prune=true \\ --interval=5m \\ --validate=client \\ --health-check=\"Deployment/backend.webapp\" \\ --health-check=\"Deployment/frontend.webapp\" \\ --health-check-timeout=2m # Trigger a git sync and apply changes if any tk sync kustomization webapp-dev --with-source # Suspend a kustomization reconciliation tk suspend kustomization webapp-dev # Export kustomizations in YAML format tk export kustomization --all > kustomizations.yaml # Resume a kustomization reconciliation tk resume kustomization webapp-dev # Delete a kustomization tk delete kustomization webapp-dev # Delete a git source tk delete source git webapp-latest # Uninstall the toolkit and delete CRDs tk uninstall --crds","title":"Examples"},{"location":"cmd/tk/#options","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) -h, --help help for tk --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options"},{"location":"cmd/tk/#see-also","text":"tk bootstrap - Bootstrap commands tk check - Check requirements and installation tk completion - Generates bash completion scripts tk create - Create commands tk delete - Delete commands tk export - Export commands tk get - Get commands tk install - Install the toolkit components tk resume - Resume commands tk suspend - Suspend commands tk sync - Synchronize commands tk uninstall - Uninstall the toolkit components","title":"SEE ALSO"},{"location":"cmd/tk/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_bootstrap/","text":"tk bootstrap \u00b6 Bootstrap commands Synopsis \u00b6 Bootstrap commands Options \u00b6 -h, --help help for bootstrap --version string toolkit tag or branch (default \"master\") Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk bootstrap github - Bootstrap GitHub repository tk bootstrap gitlab - Bootstrap GitLab repository Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Bootstrap"},{"location":"cmd/tk_bootstrap/#tk-bootstrap","text":"Bootstrap commands","title":"tk bootstrap"},{"location":"cmd/tk_bootstrap/#synopsis","text":"Bootstrap commands","title":"Synopsis"},{"location":"cmd/tk_bootstrap/#options","text":"-h, --help help for bootstrap --version string toolkit tag or branch (default \"master\")","title":"Options"},{"location":"cmd/tk_bootstrap/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_bootstrap/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk bootstrap github - Bootstrap GitHub repository tk bootstrap gitlab - Bootstrap GitLab repository","title":"SEE ALSO"},{"location":"cmd/tk_bootstrap/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_bootstrap_github/","text":"tk bootstrap github \u00b6 Bootstrap GitHub repository Synopsis \u00b6 The bootstrap command creates the GitHub repository if it doesn't exists and commits the toolkit components manifests to the master branch. Then it configure the target cluster to synchronize with the repository. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed. tk bootstrap github [flags] Examples \u00b6 # Create a GitHub personal access token and export it as an env var export GITHUB_TOKEN=<my-token> # Run bootstrap for a private repo owned by a GitHub organization bootstrap github --owner=<organization> --repository=<repo name> # Run bootstrap for a private repo and assign organization teams to it bootstrap github --owner=<organization> --repository=<repo name> --team=<team1 slug> --team=<team2 slug> # Run bootstrap for a repository path bootstrap github --owner=<organization> --repository=<repo name> --path=dev-cluster # Run bootstrap for a public repository on a personal account bootstrap github --owner=<user> --repository=<repo name> --private=false --personal=true # Run bootstrap for a private repo hosted on GitHub Enterprise bootstrap github --owner=<organization> --repository=<repo name> --hostname=<domain> Options \u00b6 -h, --help help for github --hostname string GitHub hostname (default \"github.com\") --interval duration sync interval (default 1m0s) --owner string GitHub user or organization name --path string repository path, when specified the cluster sync will be scoped to this path --personal is personal repository --private is private repository (default true) --repository string GitHub repository name --team stringArray GitHub team to be given maintainer access Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --version string toolkit tag or branch (default \"master\") SEE ALSO \u00b6 tk bootstrap - Bootstrap commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk bootstrap github"},{"location":"cmd/tk_bootstrap_github/#tk-bootstrap-github","text":"Bootstrap GitHub repository","title":"tk bootstrap github"},{"location":"cmd/tk_bootstrap_github/#synopsis","text":"The bootstrap command creates the GitHub repository if it doesn't exists and commits the toolkit components manifests to the master branch. Then it configure the target cluster to synchronize with the repository. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed. tk bootstrap github [flags]","title":"Synopsis"},{"location":"cmd/tk_bootstrap_github/#examples","text":"# Create a GitHub personal access token and export it as an env var export GITHUB_TOKEN=<my-token> # Run bootstrap for a private repo owned by a GitHub organization bootstrap github --owner=<organization> --repository=<repo name> # Run bootstrap for a private repo and assign organization teams to it bootstrap github --owner=<organization> --repository=<repo name> --team=<team1 slug> --team=<team2 slug> # Run bootstrap for a repository path bootstrap github --owner=<organization> --repository=<repo name> --path=dev-cluster # Run bootstrap for a public repository on a personal account bootstrap github --owner=<user> --repository=<repo name> --private=false --personal=true # Run bootstrap for a private repo hosted on GitHub Enterprise bootstrap github --owner=<organization> --repository=<repo name> --hostname=<domain>","title":"Examples"},{"location":"cmd/tk_bootstrap_github/#options","text":"-h, --help help for github --hostname string GitHub hostname (default \"github.com\") --interval duration sync interval (default 1m0s) --owner string GitHub user or organization name --path string repository path, when specified the cluster sync will be scoped to this path --personal is personal repository --private is private repository (default true) --repository string GitHub repository name --team stringArray GitHub team to be given maintainer access","title":"Options"},{"location":"cmd/tk_bootstrap_github/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --version string toolkit tag or branch (default \"master\")","title":"Options inherited from parent commands"},{"location":"cmd/tk_bootstrap_github/#see-also","text":"tk bootstrap - Bootstrap commands","title":"SEE ALSO"},{"location":"cmd/tk_bootstrap_github/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_bootstrap_gitlab/","text":"tk bootstrap gitlab \u00b6 Bootstrap GitLab repository Synopsis \u00b6 The bootstrap command creates the GitLab repository if it doesn't exists and commits the toolkit components manifests to the master branch. Then it configure the target cluster to synchronize with the repository. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed. tk bootstrap gitlab [flags] Examples \u00b6 # Create a GitLab API token and export it as an env var export GITLAB_TOKEN=<my-token> # Run bootstrap for a private repo owned by a GitLab group bootstrap gitlab --owner=<group> --repository=<repo name> # Run bootstrap for a repository path bootstrap gitlab --owner=<group> --repository=<repo name> --path=dev-cluster # Run bootstrap for a public repository on a personal account bootstrap gitlab --owner=<user> --repository=<repo name> --private=false --personal=true # Run bootstrap for a private repo hosted on a GitLab server bootstrap gitlab --owner=<group> --repository=<repo name> --hostname=<domain> Options \u00b6 -h, --help help for gitlab --hostname string GitLab hostname (default \"gitlab.com\") --interval duration sync interval (default 1m0s) --owner string GitLab user or group name --path string repository path, when specified the cluster sync will be scoped to this path --personal is personal repository --private is private repository (default true) --repository string GitLab repository name Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --version string toolkit tag or branch (default \"master\") SEE ALSO \u00b6 tk bootstrap - Bootstrap commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk bootstrap gitlab"},{"location":"cmd/tk_bootstrap_gitlab/#tk-bootstrap-gitlab","text":"Bootstrap GitLab repository","title":"tk bootstrap gitlab"},{"location":"cmd/tk_bootstrap_gitlab/#synopsis","text":"The bootstrap command creates the GitLab repository if it doesn't exists and commits the toolkit components manifests to the master branch. Then it configure the target cluster to synchronize with the repository. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed. tk bootstrap gitlab [flags]","title":"Synopsis"},{"location":"cmd/tk_bootstrap_gitlab/#examples","text":"# Create a GitLab API token and export it as an env var export GITLAB_TOKEN=<my-token> # Run bootstrap for a private repo owned by a GitLab group bootstrap gitlab --owner=<group> --repository=<repo name> # Run bootstrap for a repository path bootstrap gitlab --owner=<group> --repository=<repo name> --path=dev-cluster # Run bootstrap for a public repository on a personal account bootstrap gitlab --owner=<user> --repository=<repo name> --private=false --personal=true # Run bootstrap for a private repo hosted on a GitLab server bootstrap gitlab --owner=<group> --repository=<repo name> --hostname=<domain>","title":"Examples"},{"location":"cmd/tk_bootstrap_gitlab/#options","text":"-h, --help help for gitlab --hostname string GitLab hostname (default \"gitlab.com\") --interval duration sync interval (default 1m0s) --owner string GitLab user or group name --path string repository path, when specified the cluster sync will be scoped to this path --personal is personal repository --private is private repository (default true) --repository string GitLab repository name","title":"Options"},{"location":"cmd/tk_bootstrap_gitlab/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --version string toolkit tag or branch (default \"master\")","title":"Options inherited from parent commands"},{"location":"cmd/tk_bootstrap_gitlab/#see-also","text":"tk bootstrap - Bootstrap commands","title":"SEE ALSO"},{"location":"cmd/tk_bootstrap_gitlab/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_check/","text":"tk check \u00b6 Check requirements and installation Synopsis \u00b6 The check command will perform a series of checks to validate that the local environment is configured correctly and if the installed components are healthy. tk check [flags] Examples \u00b6 # Run pre-installation checks check --pre # Run installation checks check Options \u00b6 -h, --help help for check --pre only run pre-installation checks Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Check"},{"location":"cmd/tk_check/#tk-check","text":"Check requirements and installation","title":"tk check"},{"location":"cmd/tk_check/#synopsis","text":"The check command will perform a series of checks to validate that the local environment is configured correctly and if the installed components are healthy. tk check [flags]","title":"Synopsis"},{"location":"cmd/tk_check/#examples","text":"# Run pre-installation checks check --pre # Run installation checks check","title":"Examples"},{"location":"cmd/tk_check/#options","text":"-h, --help help for check --pre only run pre-installation checks","title":"Options"},{"location":"cmd/tk_check/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_check/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines","title":"SEE ALSO"},{"location":"cmd/tk_check/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_completion/","text":"tk completion \u00b6 Generates bash completion scripts Synopsis \u00b6 Generates bash completion scripts tk completion [flags] Examples \u00b6 To load completion run . <(tk completion) To configure your bash shell to load completions for each session add to your bashrc # ~/.bashrc or ~/.profile . <(tk completion) Options \u00b6 -h, --help help for completion Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk completion"},{"location":"cmd/tk_completion/#tk-completion","text":"Generates bash completion scripts","title":"tk completion"},{"location":"cmd/tk_completion/#synopsis","text":"Generates bash completion scripts tk completion [flags]","title":"Synopsis"},{"location":"cmd/tk_completion/#examples","text":"To load completion run . <(tk completion) To configure your bash shell to load completions for each session add to your bashrc # ~/.bashrc or ~/.profile . <(tk completion)","title":"Examples"},{"location":"cmd/tk_completion/#options","text":"-h, --help help for completion","title":"Options"},{"location":"cmd/tk_completion/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_completion/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines","title":"SEE ALSO"},{"location":"cmd/tk_completion/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_create/","text":"tk create \u00b6 Create commands Synopsis \u00b6 Create commands Options \u00b6 --export export in yaml format to stdout -h, --help help for create --interval duration source sync interval (default 1m0s) Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk create kustomization - Create or update a kustomization resource tk create source - Create source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Create"},{"location":"cmd/tk_create/#tk-create","text":"Create commands","title":"tk create"},{"location":"cmd/tk_create/#synopsis","text":"Create commands","title":"Synopsis"},{"location":"cmd/tk_create/#options","text":"--export export in yaml format to stdout -h, --help help for create --interval duration source sync interval (default 1m0s)","title":"Options"},{"location":"cmd/tk_create/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_create/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk create kustomization - Create or update a kustomization resource tk create source - Create source commands","title":"SEE ALSO"},{"location":"cmd/tk_create/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_create_kustomization/","text":"tk create kustomization \u00b6 Create or update a kustomization resource Synopsis \u00b6 The kustomization source command generates a kustomization.kustomize.fluxcd.io resource for a given GitRepository source. API spec: https://github.com/fluxcd/kustomize-controller/tree/master/docs/spec/v1alpha1 tk create kustomization [name] [flags] Examples \u00b6 # Create a kustomization from a source at a given path create kustomization contour \\ --source=contour \\ --path=\"./examples/contour/\" \\ --prune=true \\ --interval=10m \\ --validate=client \\ --health-check=\"Deployment/contour.projectcontour\" \\ --health-check=\"DaemonSet/envoy.projectcontour\" \\ --health-check-timeout=3m # Create a kustomization that depends on the previous one create kustomization webapp \\ --depends-on=contour \\ --source=webapp \\ --path=\"./deploy/overlays/dev\" \\ --prune=true \\ --interval=5m \\ --validate=client # Create a kustomization that runs under a service account create kustomization webapp \\ --source=webapp \\ --path=\"./deploy/overlays/staging\" \\ --prune=true \\ --interval=5m \\ --validate=client \\ --sa-name=reconclier \\ --sa-namespace=staging Options \u00b6 --depends-on stringArray kustomization that must be ready before this kustomization can be applied --health-check stringArray workload to be included in the health assessment, in the format '<kind>/<name>.<namespace>' --health-check-timeout duration timeout of health checking operations (default 2m0s) -h, --help help for kustomization --path string path to the directory containing the kustomization file (default \"./\") --prune enable garbage collection --sa-name string service account name --sa-namespace string service account namespace --source string GitRepository name --validate string validate the manifests before applying them on the cluster, can be 'client' or 'server' Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk create - Create commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk create kustomization"},{"location":"cmd/tk_create_kustomization/#tk-create-kustomization","text":"Create or update a kustomization resource","title":"tk create kustomization"},{"location":"cmd/tk_create_kustomization/#synopsis","text":"The kustomization source command generates a kustomization.kustomize.fluxcd.io resource for a given GitRepository source. API spec: https://github.com/fluxcd/kustomize-controller/tree/master/docs/spec/v1alpha1 tk create kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_create_kustomization/#examples","text":"# Create a kustomization from a source at a given path create kustomization contour \\ --source=contour \\ --path=\"./examples/contour/\" \\ --prune=true \\ --interval=10m \\ --validate=client \\ --health-check=\"Deployment/contour.projectcontour\" \\ --health-check=\"DaemonSet/envoy.projectcontour\" \\ --health-check-timeout=3m # Create a kustomization that depends on the previous one create kustomization webapp \\ --depends-on=contour \\ --source=webapp \\ --path=\"./deploy/overlays/dev\" \\ --prune=true \\ --interval=5m \\ --validate=client # Create a kustomization that runs under a service account create kustomization webapp \\ --source=webapp \\ --path=\"./deploy/overlays/staging\" \\ --prune=true \\ --interval=5m \\ --validate=client \\ --sa-name=reconclier \\ --sa-namespace=staging","title":"Examples"},{"location":"cmd/tk_create_kustomization/#options","text":"--depends-on stringArray kustomization that must be ready before this kustomization can be applied --health-check stringArray workload to be included in the health assessment, in the format '<kind>/<name>.<namespace>' --health-check-timeout duration timeout of health checking operations (default 2m0s) -h, --help help for kustomization --path string path to the directory containing the kustomization file (default \"./\") --prune enable garbage collection --sa-name string service account name --sa-namespace string service account namespace --source string GitRepository name --validate string validate the manifests before applying them on the cluster, can be 'client' or 'server'","title":"Options"},{"location":"cmd/tk_create_kustomization/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_create_kustomization/#see-also","text":"tk create - Create commands","title":"SEE ALSO"},{"location":"cmd/tk_create_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_create_source/","text":"tk create source \u00b6 Create source commands Synopsis \u00b6 Create source commands Options \u00b6 -h, --help help for source Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk create - Create commands tk create source git - Create or update a git source Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk create source"},{"location":"cmd/tk_create_source/#tk-create-source","text":"Create source commands","title":"tk create source"},{"location":"cmd/tk_create_source/#synopsis","text":"Create source commands","title":"Synopsis"},{"location":"cmd/tk_create_source/#options","text":"-h, --help help for source","title":"Options"},{"location":"cmd/tk_create_source/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_create_source/#see-also","text":"tk create - Create commands tk create source git - Create or update a git source","title":"SEE ALSO"},{"location":"cmd/tk_create_source/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_create_source_git/","text":"tk create source git \u00b6 Create or update a git source Synopsis \u00b6 The create source command generates a GitRepository resource and waits for it to sync. For Git over SSH, host and SSH keys are automatically generated and stored in a Kubernetes secret. For private Git repositories, the basic authentication credentials are stored in a Kubernetes secret. tk create source git [name] [flags] Examples \u00b6 # Create a source from a public Git repository master branch create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --branch=master # Create a source from a Git repository pinned to specific git tag create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --tag=\"3.2.3\" # Create a source from a public Git repository tag that matches a semver range create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --tag-semver=\">=3.2.0 <3.3.0\" # Create a source from a Git repository using SSH authentication create source git podinfo \\ --url=ssh://git@github.com/stefanprodan/podinfo \\ --branch=master # Create a source from a Git repository using SSH authentication and an # ECDSA P-521 curve public key create source git podinfo \\ --url=ssh://git@github.com/stefanprodan/podinfo \\ --branch=master \\ --ssh-key-algorithm=ecdsa \\ --ssh-ecdsa-curve=p521 # Create a source from a Git repository using basic authentication create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --username=username \\ --password=password Options \u00b6 --branch string git branch (default \"master\") -h, --help help for git -p, --password string basic authentication password --ssh-ecdsa-curve ecdsaCurve SSH ECDSA public key curve (p384, p521, p256) (default p384) --ssh-key-algorithm publicKeyAlgorithm SSH public key algorithm (rsa, ecdsa, ed25519) (default rsa) --ssh-rsa-bits rsaKeyBits SSH RSA public key bit size (multiplies of 8) (default 2048) --tag string git tag --tag-semver string git tag semver range --url string git address, e.g. ssh://git@host/org/repository -u, --username string basic authentication username Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk create source - Create source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk create source git"},{"location":"cmd/tk_create_source_git/#tk-create-source-git","text":"Create or update a git source","title":"tk create source git"},{"location":"cmd/tk_create_source_git/#synopsis","text":"The create source command generates a GitRepository resource and waits for it to sync. For Git over SSH, host and SSH keys are automatically generated and stored in a Kubernetes secret. For private Git repositories, the basic authentication credentials are stored in a Kubernetes secret. tk create source git [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_create_source_git/#examples","text":"# Create a source from a public Git repository master branch create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --branch=master # Create a source from a Git repository pinned to specific git tag create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --tag=\"3.2.3\" # Create a source from a public Git repository tag that matches a semver range create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --tag-semver=\">=3.2.0 <3.3.0\" # Create a source from a Git repository using SSH authentication create source git podinfo \\ --url=ssh://git@github.com/stefanprodan/podinfo \\ --branch=master # Create a source from a Git repository using SSH authentication and an # ECDSA P-521 curve public key create source git podinfo \\ --url=ssh://git@github.com/stefanprodan/podinfo \\ --branch=master \\ --ssh-key-algorithm=ecdsa \\ --ssh-ecdsa-curve=p521 # Create a source from a Git repository using basic authentication create source git podinfo \\ --url=https://github.com/stefanprodan/podinfo \\ --username=username \\ --password=password","title":"Examples"},{"location":"cmd/tk_create_source_git/#options","text":"--branch string git branch (default \"master\") -h, --help help for git -p, --password string basic authentication password --ssh-ecdsa-curve ecdsaCurve SSH ECDSA public key curve (p384, p521, p256) (default p384) --ssh-key-algorithm publicKeyAlgorithm SSH public key algorithm (rsa, ecdsa, ed25519) (default rsa) --ssh-rsa-bits rsaKeyBits SSH RSA public key bit size (multiplies of 8) (default 2048) --tag string git tag --tag-semver string git tag semver range --url string git address, e.g. ssh://git@host/org/repository -u, --username string basic authentication username","title":"Options"},{"location":"cmd/tk_create_source_git/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --export export in yaml format to stdout --interval duration source sync interval (default 1m0s) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_create_source_git/#see-also","text":"tk create source - Create source commands","title":"SEE ALSO"},{"location":"cmd/tk_create_source_git/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_delete/","text":"tk delete \u00b6 Delete commands Synopsis \u00b6 Delete commands Options \u00b6 -h, --help help for delete -s, --silent delete resource without asking for confirmation Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk delete kustomization - Delete kustomization tk delete source - Delete sources commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Delete"},{"location":"cmd/tk_delete/#tk-delete","text":"Delete commands","title":"tk delete"},{"location":"cmd/tk_delete/#synopsis","text":"Delete commands","title":"Synopsis"},{"location":"cmd/tk_delete/#options","text":"-h, --help help for delete -s, --silent delete resource without asking for confirmation","title":"Options"},{"location":"cmd/tk_delete/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_delete/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk delete kustomization - Delete kustomization tk delete source - Delete sources commands","title":"SEE ALSO"},{"location":"cmd/tk_delete/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_delete_kustomization/","text":"tk delete kustomization \u00b6 Delete kustomization Synopsis \u00b6 Delete kustomization tk delete kustomization [name] [flags] Options \u00b6 -h, --help help for kustomization Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk delete - Delete commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk delete kustomization"},{"location":"cmd/tk_delete_kustomization/#tk-delete-kustomization","text":"Delete kustomization","title":"tk delete kustomization"},{"location":"cmd/tk_delete_kustomization/#synopsis","text":"Delete kustomization tk delete kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_delete_kustomization/#options","text":"-h, --help help for kustomization","title":"Options"},{"location":"cmd/tk_delete_kustomization/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_delete_kustomization/#see-also","text":"tk delete - Delete commands","title":"SEE ALSO"},{"location":"cmd/tk_delete_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_delete_source/","text":"tk delete source \u00b6 Delete sources commands Synopsis \u00b6 Delete sources commands Options \u00b6 -h, --help help for source Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk delete - Delete commands tk delete source git - Delete git source Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk delete source"},{"location":"cmd/tk_delete_source/#tk-delete-source","text":"Delete sources commands","title":"tk delete source"},{"location":"cmd/tk_delete_source/#synopsis","text":"Delete sources commands","title":"Synopsis"},{"location":"cmd/tk_delete_source/#options","text":"-h, --help help for source","title":"Options"},{"location":"cmd/tk_delete_source/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_delete_source/#see-also","text":"tk delete - Delete commands tk delete source git - Delete git source","title":"SEE ALSO"},{"location":"cmd/tk_delete_source/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_delete_source_git/","text":"tk delete source git \u00b6 Delete git source Synopsis \u00b6 Delete git source tk delete source git [name] [flags] Options \u00b6 -h, --help help for git Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk delete source - Delete sources commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk delete source git"},{"location":"cmd/tk_delete_source_git/#tk-delete-source-git","text":"Delete git source","title":"tk delete source git"},{"location":"cmd/tk_delete_source_git/#synopsis","text":"Delete git source tk delete source git [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_delete_source_git/#options","text":"-h, --help help for git","title":"Options"},{"location":"cmd/tk_delete_source_git/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") -s, --silent delete resource without asking for confirmation --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_delete_source_git/#see-also","text":"tk delete source - Delete sources commands","title":"SEE ALSO"},{"location":"cmd/tk_delete_source_git/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_export/","text":"tk export \u00b6 Export commands Synopsis \u00b6 Export commands Options \u00b6 --all select all resources -h, --help help for export Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk export kustomization - Export kustomization in YAML format tk export source - Export source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Export"},{"location":"cmd/tk_export/#tk-export","text":"Export commands","title":"tk export"},{"location":"cmd/tk_export/#synopsis","text":"Export commands","title":"Synopsis"},{"location":"cmd/tk_export/#options","text":"--all select all resources -h, --help help for export","title":"Options"},{"location":"cmd/tk_export/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_export/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk export kustomization - Export kustomization in YAML format tk export source - Export source commands","title":"SEE ALSO"},{"location":"cmd/tk_export/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_export_kustomization/","text":"tk export kustomization \u00b6 Export kustomization in YAML format Synopsis \u00b6 Export kustomization in YAML format tk export kustomization [name] [flags] Examples \u00b6 # Export all kustomizations export kustomization --all > kustomizations.yaml # Export a kustomization export kustomization my-app > kustomization.yaml Options \u00b6 -h, --help help for kustomization Options inherited from parent commands \u00b6 --all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk export - Export commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk export kustomization"},{"location":"cmd/tk_export_kustomization/#tk-export-kustomization","text":"Export kustomization in YAML format","title":"tk export kustomization"},{"location":"cmd/tk_export_kustomization/#synopsis","text":"Export kustomization in YAML format tk export kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_export_kustomization/#examples","text":"# Export all kustomizations export kustomization --all > kustomizations.yaml # Export a kustomization export kustomization my-app > kustomization.yaml","title":"Examples"},{"location":"cmd/tk_export_kustomization/#options","text":"-h, --help help for kustomization","title":"Options"},{"location":"cmd/tk_export_kustomization/#options-inherited-from-parent-commands","text":"--all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_export_kustomization/#see-also","text":"tk export - Export commands","title":"SEE ALSO"},{"location":"cmd/tk_export_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_export_source/","text":"tk export source \u00b6 Export source commands Synopsis \u00b6 Export source commands Options \u00b6 -h, --help help for source --with-credentials include credential secrets Options inherited from parent commands \u00b6 --all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk export - Export commands tk export source git - Export git sources in YAML format Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk export source"},{"location":"cmd/tk_export_source/#tk-export-source","text":"Export source commands","title":"tk export source"},{"location":"cmd/tk_export_source/#synopsis","text":"Export source commands","title":"Synopsis"},{"location":"cmd/tk_export_source/#options","text":"-h, --help help for source --with-credentials include credential secrets","title":"Options"},{"location":"cmd/tk_export_source/#options-inherited-from-parent-commands","text":"--all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_export_source/#see-also","text":"tk export - Export commands tk export source git - Export git sources in YAML format","title":"SEE ALSO"},{"location":"cmd/tk_export_source/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_export_source_git/","text":"tk export source git \u00b6 Export git sources in YAML format Synopsis \u00b6 Export git sources in YAML format tk export source git [name] [flags] Examples \u00b6 # Export all git sources export source git --all > sources.yaml # Export a git source including the SSH keys or basic auth credentials export source git my-private-repo --with-credentials > source.yaml Options \u00b6 -h, --help help for git Options inherited from parent commands \u00b6 --all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --with-credentials include credential secrets SEE ALSO \u00b6 tk export source - Export source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk export source git"},{"location":"cmd/tk_export_source_git/#tk-export-source-git","text":"Export git sources in YAML format","title":"tk export source git"},{"location":"cmd/tk_export_source_git/#synopsis","text":"Export git sources in YAML format tk export source git [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_export_source_git/#examples","text":"# Export all git sources export source git --all > sources.yaml # Export a git source including the SSH keys or basic auth credentials export source git my-private-repo --with-credentials > source.yaml","title":"Examples"},{"location":"cmd/tk_export_source_git/#options","text":"-h, --help help for git","title":"Options"},{"location":"cmd/tk_export_source_git/#options-inherited-from-parent-commands","text":"--all select all resources --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects --with-credentials include credential secrets","title":"Options inherited from parent commands"},{"location":"cmd/tk_export_source_git/#see-also","text":"tk export source - Export source commands","title":"SEE ALSO"},{"location":"cmd/tk_export_source_git/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_get/","text":"tk get \u00b6 Get commands Synopsis \u00b6 Get commands Options \u00b6 -h, --help help for get Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk get kustomizations - Get kustomizations status tk get sources - Get sources commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Get"},{"location":"cmd/tk_get/#tk-get","text":"Get commands","title":"tk get"},{"location":"cmd/tk_get/#synopsis","text":"Get commands","title":"Synopsis"},{"location":"cmd/tk_get/#options","text":"-h, --help help for get","title":"Options"},{"location":"cmd/tk_get/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_get/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk get kustomizations - Get kustomizations status tk get sources - Get sources commands","title":"SEE ALSO"},{"location":"cmd/tk_get/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_get_kustomizations/","text":"tk get kustomizations \u00b6 Get kustomizations status Synopsis \u00b6 The get kustomizations command prints the status of the resources. tk get kustomizations [flags] Options \u00b6 -h, --help help for kustomizations Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk get - Get commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk get kustomizations"},{"location":"cmd/tk_get_kustomizations/#tk-get-kustomizations","text":"Get kustomizations status","title":"tk get kustomizations"},{"location":"cmd/tk_get_kustomizations/#synopsis","text":"The get kustomizations command prints the status of the resources. tk get kustomizations [flags]","title":"Synopsis"},{"location":"cmd/tk_get_kustomizations/#options","text":"-h, --help help for kustomizations","title":"Options"},{"location":"cmd/tk_get_kustomizations/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_get_kustomizations/#see-also","text":"tk get - Get commands","title":"SEE ALSO"},{"location":"cmd/tk_get_kustomizations/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_get_sources/","text":"tk get sources \u00b6 Get sources commands Synopsis \u00b6 Get sources commands Options \u00b6 -h, --help help for sources Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk get - Get commands tk get sources git - Get git sources status Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk get sources"},{"location":"cmd/tk_get_sources/#tk-get-sources","text":"Get sources commands","title":"tk get sources"},{"location":"cmd/tk_get_sources/#synopsis","text":"Get sources commands","title":"Synopsis"},{"location":"cmd/tk_get_sources/#options","text":"-h, --help help for sources","title":"Options"},{"location":"cmd/tk_get_sources/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_get_sources/#see-also","text":"tk get - Get commands tk get sources git - Get git sources status","title":"SEE ALSO"},{"location":"cmd/tk_get_sources/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_get_sources_git/","text":"tk get sources git \u00b6 Get git sources status Synopsis \u00b6 The get sources command prints the status of the git resources. tk get sources git [flags] Options \u00b6 -h, --help help for git Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk get sources - Get sources commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk get sources git"},{"location":"cmd/tk_get_sources_git/#tk-get-sources-git","text":"Get git sources status","title":"tk get sources git"},{"location":"cmd/tk_get_sources_git/#synopsis","text":"The get sources command prints the status of the git resources. tk get sources git [flags]","title":"Synopsis"},{"location":"cmd/tk_get_sources_git/#options","text":"-h, --help help for git","title":"Options"},{"location":"cmd/tk_get_sources_git/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_get_sources_git/#see-also","text":"tk get sources - Get sources commands","title":"SEE ALSO"},{"location":"cmd/tk_get_sources_git/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_install/","text":"tk install \u00b6 Install the toolkit components Synopsis \u00b6 The install command deploys the toolkit components in the specified namespace. If a previous version is installed, then an in-place upgrade will be performed. tk install [flags] Examples \u00b6 # Install the latest version in the gitops-systems namespace install --version=master --namespace=gitops-systems # Dry-run install for a specific version and a series of components install --dry-run --version=0.0.1 --components=\"source-controller,kustomize-controller\" # Dry-run install with manifests preview install --dry-run --verbose Options \u00b6 --dry-run only print the object that would be applied -h, --help help for install --manifests string path to the manifest directory, dev only -v, --version string toolkit tag or branch (default \"master\") Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Install"},{"location":"cmd/tk_install/#tk-install","text":"Install the toolkit components","title":"tk install"},{"location":"cmd/tk_install/#synopsis","text":"The install command deploys the toolkit components in the specified namespace. If a previous version is installed, then an in-place upgrade will be performed. tk install [flags]","title":"Synopsis"},{"location":"cmd/tk_install/#examples","text":"# Install the latest version in the gitops-systems namespace install --version=master --namespace=gitops-systems # Dry-run install for a specific version and a series of components install --dry-run --version=0.0.1 --components=\"source-controller,kustomize-controller\" # Dry-run install with manifests preview install --dry-run --verbose","title":"Examples"},{"location":"cmd/tk_install/#options","text":"--dry-run only print the object that would be applied -h, --help help for install --manifests string path to the manifest directory, dev only -v, --version string toolkit tag or branch (default \"master\")","title":"Options"},{"location":"cmd/tk_install/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_install/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines","title":"SEE ALSO"},{"location":"cmd/tk_install/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_resume/","text":"tk resume \u00b6 Resume commands Synopsis \u00b6 Resume commands Options \u00b6 -h, --help help for resume Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk resume kustomization - Resume kustomization Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Resume"},{"location":"cmd/tk_resume/#tk-resume","text":"Resume commands","title":"tk resume"},{"location":"cmd/tk_resume/#synopsis","text":"Resume commands","title":"Synopsis"},{"location":"cmd/tk_resume/#options","text":"-h, --help help for resume","title":"Options"},{"location":"cmd/tk_resume/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_resume/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk resume kustomization - Resume kustomization","title":"SEE ALSO"},{"location":"cmd/tk_resume/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_resume_kustomization/","text":"tk resume kustomization \u00b6 Resume kustomization Synopsis \u00b6 The resume command marks a previously suspended Kustomization resource for reconciliation and waits for it to finish the apply. tk resume kustomization [name] [flags] Options \u00b6 -h, --help help for kustomization Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk resume - Resume commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk resume kustomization"},{"location":"cmd/tk_resume_kustomization/#tk-resume-kustomization","text":"Resume kustomization","title":"tk resume kustomization"},{"location":"cmd/tk_resume_kustomization/#synopsis","text":"The resume command marks a previously suspended Kustomization resource for reconciliation and waits for it to finish the apply. tk resume kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_resume_kustomization/#options","text":"-h, --help help for kustomization","title":"Options"},{"location":"cmd/tk_resume_kustomization/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_resume_kustomization/#see-also","text":"tk resume - Resume commands","title":"SEE ALSO"},{"location":"cmd/tk_resume_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_suspend/","text":"tk suspend \u00b6 Suspend commands Synopsis \u00b6 Suspend commands Options \u00b6 -h, --help help for suspend Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk suspend kustomization - Suspend kustomization Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Suspend"},{"location":"cmd/tk_suspend/#tk-suspend","text":"Suspend commands","title":"tk suspend"},{"location":"cmd/tk_suspend/#synopsis","text":"Suspend commands","title":"Synopsis"},{"location":"cmd/tk_suspend/#options","text":"-h, --help help for suspend","title":"Options"},{"location":"cmd/tk_suspend/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_suspend/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk suspend kustomization - Suspend kustomization","title":"SEE ALSO"},{"location":"cmd/tk_suspend/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_suspend_kustomization/","text":"tk suspend kustomization \u00b6 Suspend kustomization Synopsis \u00b6 The suspend command disables the reconciliation of a Kustomization resource. tk suspend kustomization [name] [flags] Options \u00b6 -h, --help help for kustomization Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk suspend - Suspend commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk suspend kustomization"},{"location":"cmd/tk_suspend_kustomization/#tk-suspend-kustomization","text":"Suspend kustomization","title":"tk suspend kustomization"},{"location":"cmd/tk_suspend_kustomization/#synopsis","text":"The suspend command disables the reconciliation of a Kustomization resource. tk suspend kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_suspend_kustomization/#options","text":"-h, --help help for kustomization","title":"Options"},{"location":"cmd/tk_suspend_kustomization/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_suspend_kustomization/#see-also","text":"tk suspend - Suspend commands","title":"SEE ALSO"},{"location":"cmd/tk_suspend_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_sync/","text":"tk sync \u00b6 Synchronize commands Synopsis \u00b6 Synchronize commands Options \u00b6 -h, --help help for sync Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines tk sync kustomization - Synchronize kustomization tk sync source - Synchronize source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Synchronize"},{"location":"cmd/tk_sync/#tk-sync","text":"Synchronize commands","title":"tk sync"},{"location":"cmd/tk_sync/#synopsis","text":"Synchronize commands","title":"Synopsis"},{"location":"cmd/tk_sync/#options","text":"-h, --help help for sync","title":"Options"},{"location":"cmd/tk_sync/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_sync/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines tk sync kustomization - Synchronize kustomization tk sync source - Synchronize source commands","title":"SEE ALSO"},{"location":"cmd/tk_sync/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_sync_kustomization/","text":"tk sync kustomization \u00b6 Synchronize kustomization Synopsis \u00b6 The sync kustomization command triggers a reconciliation of a Kustomization resource and waits for it to finish. tk sync kustomization [name] [flags] Examples \u00b6 # Trigger a kustomization apply outside of the reconciliation interval sync kustomization podinfo # Trigger a git sync of the kustomization source and apply changes sync kustomization podinfo --with-source Options \u00b6 -h, --help help for kustomization --with-source synchronize kustomization source Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk sync - Synchronize commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk sync kustomization"},{"location":"cmd/tk_sync_kustomization/#tk-sync-kustomization","text":"Synchronize kustomization","title":"tk sync kustomization"},{"location":"cmd/tk_sync_kustomization/#synopsis","text":"The sync kustomization command triggers a reconciliation of a Kustomization resource and waits for it to finish. tk sync kustomization [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_sync_kustomization/#examples","text":"# Trigger a kustomization apply outside of the reconciliation interval sync kustomization podinfo # Trigger a git sync of the kustomization source and apply changes sync kustomization podinfo --with-source","title":"Examples"},{"location":"cmd/tk_sync_kustomization/#options","text":"-h, --help help for kustomization --with-source synchronize kustomization source","title":"Options"},{"location":"cmd/tk_sync_kustomization/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_sync_kustomization/#see-also","text":"tk sync - Synchronize commands","title":"SEE ALSO"},{"location":"cmd/tk_sync_kustomization/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_sync_source/","text":"tk sync source \u00b6 Synchronize source commands Synopsis \u00b6 Synchronize source commands Options \u00b6 -h, --help help for source Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk sync - Synchronize commands tk sync source git - Synchronize git source Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk sync source"},{"location":"cmd/tk_sync_source/#tk-sync-source","text":"Synchronize source commands","title":"tk sync source"},{"location":"cmd/tk_sync_source/#synopsis","text":"Synchronize source commands","title":"Synopsis"},{"location":"cmd/tk_sync_source/#options","text":"-h, --help help for source","title":"Options"},{"location":"cmd/tk_sync_source/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_sync_source/#see-also","text":"tk sync - Synchronize commands tk sync source git - Synchronize git source","title":"SEE ALSO"},{"location":"cmd/tk_sync_source/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_sync_source_git/","text":"tk sync source git \u00b6 Synchronize git source Synopsis \u00b6 The sync source command triggers a reconciliation of a GitRepository resource and waits for it to finish. tk sync source git [name] [flags] Examples \u00b6 # Trigger a git pull for an existing source sync source git podinfo Options \u00b6 -h, --help help for git Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk sync source - Synchronize source commands Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Tk sync source git"},{"location":"cmd/tk_sync_source_git/#tk-sync-source-git","text":"Synchronize git source","title":"tk sync source git"},{"location":"cmd/tk_sync_source_git/#synopsis","text":"The sync source command triggers a reconciliation of a GitRepository resource and waits for it to finish. tk sync source git [name] [flags]","title":"Synopsis"},{"location":"cmd/tk_sync_source_git/#examples","text":"# Trigger a git pull for an existing source sync source git podinfo","title":"Examples"},{"location":"cmd/tk_sync_source_git/#options","text":"-h, --help help for git","title":"Options"},{"location":"cmd/tk_sync_source_git/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_sync_source_git/#see-also","text":"tk sync source - Synchronize source commands","title":"SEE ALSO"},{"location":"cmd/tk_sync_source_git/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"cmd/tk_uninstall/","text":"tk uninstall \u00b6 Uninstall the toolkit components Synopsis \u00b6 The uninstall command removes the namespace, cluster roles, cluster role bindings and CRDs. tk uninstall [flags] Examples \u00b6 # Dry-run uninstall of all components uninstall --dry-run --namespace=gitops-system # Uninstall all components and delete custom resource definitions uninstall --crds --namespace=gitops-system Options \u00b6 --crds removes all CRDs previously installed --dry-run only print the object that would be deleted -h, --help help for uninstall --kustomizations removes all kustomizations previously installed -s, --silent delete components without asking for confirmation Options inherited from parent commands \u00b6 --components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects SEE ALSO \u00b6 tk - Command line utility for assembling Kubernetes CD pipelines Auto generated by spf13/cobra on 19-Jun-2020 \u00b6","title":"Uninstall"},{"location":"cmd/tk_uninstall/#tk-uninstall","text":"Uninstall the toolkit components","title":"tk uninstall"},{"location":"cmd/tk_uninstall/#synopsis","text":"The uninstall command removes the namespace, cluster roles, cluster role bindings and CRDs. tk uninstall [flags]","title":"Synopsis"},{"location":"cmd/tk_uninstall/#examples","text":"# Dry-run uninstall of all components uninstall --dry-run --namespace=gitops-system # Uninstall all components and delete custom resource definitions uninstall --crds --namespace=gitops-system","title":"Examples"},{"location":"cmd/tk_uninstall/#options","text":"--crds removes all CRDs previously installed --dry-run only print the object that would be deleted -h, --help help for uninstall --kustomizations removes all kustomizations previously installed -s, --silent delete components without asking for confirmation","title":"Options"},{"location":"cmd/tk_uninstall/#options-inherited-from-parent-commands","text":"--components strings list of components, accepts comma-separated values (default [source-controller,kustomize-controller]) --kubeconfig string path to the kubeconfig file (default \"~/.kube/config\") --namespace string the namespace scope for this operation (default \"gitops-system\") --timeout duration timeout for this operation (default 5m0s) --verbose print generated objects","title":"Options inherited from parent commands"},{"location":"cmd/tk_uninstall/#see-also","text":"tk - Command line utility for assembling Kubernetes CD pipelines","title":"SEE ALSO"},{"location":"cmd/tk_uninstall/#auto-generated-by-spf13cobra-on-19-jun-2020","text":"","title":"Auto generated by spf13/cobra on 19-Jun-2020"},{"location":"get-started/","text":"Get started with GitOps Toolkit \u00b6 Prerequisites \u00b6 You will need a Kubernetes cluster version 1.14 or newer and kubectl version 1.18. For a quick local test, you can use minikube , kubeadm or kind . Any other Kubernetes setup will work as well though. In order to follow the guide you'll need a GitHub account and a personal access token that can create repositories. Export your GitHub personal access token and username: export GITHUB_TOKEN = <your-token> export GITHUB_USER = <your-username> Install the toolkit CLI \u00b6 To install the latest tk release run: curl -s https://toolkit.fluxcd.io/install.sh | sudo bash The install script downloads the tk binary to /usr/local/bin . Binaries for macOS and Linux AMD64 are available for download on the release page . To configure your shell to load tk completions add to your bash profile: # ~/.bashrc or ~/.bash_profile . < ( tk completion ) GitOps workflow \u00b6 You'll be using a dedicated Git repository e.g. fleet-infra to manage one or more Kubernetes clusters. This guide assumes that you have two clusters, one for staging and one for production. Using the toolkit CLI you'll do the following: configure each cluster to synchronise with a directory inside the fleet repository register app sources (git repositories) that contain plain Kubernetes manifests or Kustomize overlays configure app deployments on both clusters (pre-releases on staging, semver releases on production) Staging bootstrap \u00b6 Verify that your staging cluster satisfies the prerequisites with: $ tk check --pre \u25ba checking prerequisites \u2714 kubectl 1.18.3 >=1.18.0 \u2714 kubernetes 1.16.8-eks-e16311 >=1.14.0 \u2714 prerequisites checks passed Run the bootstrap command: tk bootstrap github \\ --owner = $GITHUB_USER \\ --repository = fleet-infra \\ --path = staging-cluster \\ --personal The bootstrap command creates a repository if one doesn't exist and commits the toolkit components manifests to the master branch at the specified path. Then it configures the target cluster to synchronize with the specified path inside the repository. If you wish to create the repository under a GitHub organization: tk bootstrap github \\ --owner = <organization> \\ --repository = <repo-name> \\ --team = <team1-slug> \\ --team = <team2-slug> \\ --path = staging-cluster Example output: $ tk bootstrap github --owner=gitopsrun --repository=fleet-infra --path=staging-cluster --team=devs \u25ba connecting to github.com \u2714 repository created \u2714 devs team access granted \u2714 repository cloned \u271a generating manifests \u2714 components manifests pushed \u25ba installing components in gitops-system namespace namespace/gitops-system created customresourcedefinition.apiextensions.k8s.io/gitrepositories.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/helmcharts.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/helmrepositories.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/kustomizations.kustomize.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/profiles.kustomize.fluxcd.io created role.rbac.authorization.k8s.io/crd-controller-gitops-system created rolebinding.rbac.authorization.k8s.io/crd-controller-gitops-system created clusterrolebinding.rbac.authorization.k8s.io/cluster-reconciler-gitops-system created service/source-controller created deployment.apps/kustomize-controller created deployment.apps/source-controller created networkpolicy.networking.k8s.io/deny-ingress created Waiting for deployment \"source-controller\" rollout to finish: 0 of 1 updated replicas are available... deployment \"source-controller\" successfully rolled out deployment \"kustomize-controller\" successfully rolled out \u2714 install completed \u25ba configuring deploy key \u2714 deploy key configured \u25ba generating sync manifests \u2714 sync manifests pushed \u25ba applying sync manifests \u25ce waiting for cluster sync \u2714 bootstrap finished If you prefer GitLab, export GITLAB_TOKEN env var and use the command tk bootstrap gitlab . It is safe to run the bootstrap command as many times as you want. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed. Staging workflow \u00b6 Clone the repository with: git clone https://github.com/ $GITHUB_USER /fleet-infra cd fleet-infra Create a git source pointing to a public repository master branch: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --branch = master \\ --interval = 30s \\ --export > ./staging-cluster/webapp-source.yaml Create a kustomization for synchronizing the common manifests on the cluster: tk create kustomization webapp-common \\ --source = webapp \\ --path = \"./deploy/webapp/common\" \\ --prune = true \\ --validate = client \\ --interval = 1h \\ --export > ./staging-cluster/webapp-common.yaml Create a kustomization for the backend service that depends on common: tk create kustomization webapp-backend \\ --depends-on = webapp-common \\ --source = webapp \\ --path = \"./deploy/webapp/backend\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/backend.webapp\" \\ --health-check-timeout = 2m \\ --export > ./staging-cluster/webapp-backend.yaml Create a kustomization for the frontend service that depends on backend: tk create kustomization webapp-frontend \\ --depends-on = webapp-backend \\ --source = webapp \\ --path = \"./deploy/webapp/frontend\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/frontend.webapp\" \\ --health-check-timeout = 2m \\ --export > ./staging-cluster/webapp-frontend.yaml Push changes to origin: git add -A && git commit -m \"add staging webapp\" && git push In about 30s the synchronization should start: $ watch tk get kustomizations \u2714 gitops-system last applied revision master/35d5765a1acb9e9ce66cad7274c6fe03eee1e8eb \u2714 webapp-backend reconciling \u2714 webapp-common last applied revision master/f43f9b2eb6766e07f318d266a99d2ec7c940b0cf \u2717 webapp-frontend dependency 'gitops-system/webapp-backend' is not ready When the synchronization finishes you can check that the webapp services are running: $ kubectl -n webapp get deployments,services NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/backend 1/1 1 1 4m1s deployment.apps/frontend 1/1 1 1 3m31s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/backend ClusterIP 10.52.10.22 <none> 9898/TCP,9999/TCP 4m1s service/frontend ClusterIP 10.52.9.85 <none> 80/TCP 3m31s From this moment forward, any changes made to the webapp master branch will be synchronised with the cluster. If a Kubernetes manifest is removed from source, the reconclier will remove it from your cluster. If you delete a kustomization from the fleet infra repo, the reconciler will remove all Kubernetes objects that were previously applied from that kustomization. If you alter the webapp deployment using kubectl edit , the changes will be reverted to match the state described in git. When dealing with an incident, you can pause the recitation of a kustomization with tk suspend kustomization <name> . Once the debugging session is over, you can re-enable the reconciliation with tk resume kustomization <name> . Production bootstrap \u00b6 On production clusters, you may wish to deploy stable releases of an application. When creating a git source instead of a branch, you can specify a git tag or a semver expression. Change your kubectl context to a different cluster and run the bootstrap for the production environment: tk bootstrap github \\ --owner = $GITHUB_USER \\ --repository = fleet-infra \\ --path = prod-cluster \\ --personal Pull the changes locally: git pull Production workflow \u00b6 Create a git source using a semver range to target stable releases: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --tag-semver = \">=4.0.0 <4.0.2\" \\ --interval = 30s \\ --export > ./prod-cluster/webapp-source.yaml Create a kustomization for webapp pointing to the production overlay: tk create kustomization webapp \\ --source = webapp \\ --path = \"./deploy/overlays/production\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/frontend.production\" \\ --health-check = \"Deployment/backend.production\" \\ --health-check-timeout = 2m \\ --export > ./prod-cluster/webapp-production.yaml Push changes to origin: git add -A && git commit -m \"add prod webapp\" && git push List git sources: $ tk get sources git \u2714 gitops-system last fetched revision master/99072ee132abdead8b7799d7891eae2f524eb73d \u2714 webapp last fetched revision 4.0.1/113360052b3153e439a0cf8de76b8e3d2a7bdf27 The kubectl equivalent is kubectl -n gitops-system get gitrepositories . List kustomization: $ tk get kustomizations \u2714 gitops-system last applied revision master/99072ee132abdead8b7799d7891eae2f524eb73d \u2714 webapp last applied revision 4.0.1/113360052b3153e439a0cf8de76b8e3d2a7bdf27 The kubectl equivalent is kubectl -n gitops-system get kustomizations . If you want to upgrade to the latest 4.x version, you can change the semver expression to: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --tag-semver = \">=4.0.0 <5.0.0\" \\ --interval = 30s \\ --export > ./prod-cluster/webapp-source.yaml git add -A && git commit -m \"update prod webapp\" && git push Trigger a git sync: $ tk sync ks gitops-system --with-source \u25ba annotating source gitops-system \u2714 source annotated \u25ce waiting for git sync \u2714 git sync completed \u2714 fetched revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 \u25ce waiting for kustomization sync \u2714 kustomization sync completed \u2714 applied revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 The kubectl equivalent is kubectl -n gitops-system annotate gitrepository/gitops-system source.fluxcd.io/syncAt=\"$(date +%s)\" . Wait for the webapp to be upgraded: $ watch tk get kustomizations \u2714 gitops-system last applied revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 \u2714 webapp last applied revision 4.0.5/f43f9b2eb6766e07f318d266a99d2ec7c940b0cf","title":"Get Started"},{"location":"get-started/#get-started-with-gitops-toolkit","text":"","title":"Get started with GitOps Toolkit"},{"location":"get-started/#prerequisites","text":"You will need a Kubernetes cluster version 1.14 or newer and kubectl version 1.18. For a quick local test, you can use minikube , kubeadm or kind . Any other Kubernetes setup will work as well though. In order to follow the guide you'll need a GitHub account and a personal access token that can create repositories. Export your GitHub personal access token and username: export GITHUB_TOKEN = <your-token> export GITHUB_USER = <your-username>","title":"Prerequisites"},{"location":"get-started/#install-the-toolkit-cli","text":"To install the latest tk release run: curl -s https://toolkit.fluxcd.io/install.sh | sudo bash The install script downloads the tk binary to /usr/local/bin . Binaries for macOS and Linux AMD64 are available for download on the release page . To configure your shell to load tk completions add to your bash profile: # ~/.bashrc or ~/.bash_profile . < ( tk completion )","title":"Install the toolkit CLI"},{"location":"get-started/#gitops-workflow","text":"You'll be using a dedicated Git repository e.g. fleet-infra to manage one or more Kubernetes clusters. This guide assumes that you have two clusters, one for staging and one for production. Using the toolkit CLI you'll do the following: configure each cluster to synchronise with a directory inside the fleet repository register app sources (git repositories) that contain plain Kubernetes manifests or Kustomize overlays configure app deployments on both clusters (pre-releases on staging, semver releases on production)","title":"GitOps workflow"},{"location":"get-started/#staging-bootstrap","text":"Verify that your staging cluster satisfies the prerequisites with: $ tk check --pre \u25ba checking prerequisites \u2714 kubectl 1.18.3 >=1.18.0 \u2714 kubernetes 1.16.8-eks-e16311 >=1.14.0 \u2714 prerequisites checks passed Run the bootstrap command: tk bootstrap github \\ --owner = $GITHUB_USER \\ --repository = fleet-infra \\ --path = staging-cluster \\ --personal The bootstrap command creates a repository if one doesn't exist and commits the toolkit components manifests to the master branch at the specified path. Then it configures the target cluster to synchronize with the specified path inside the repository. If you wish to create the repository under a GitHub organization: tk bootstrap github \\ --owner = <organization> \\ --repository = <repo-name> \\ --team = <team1-slug> \\ --team = <team2-slug> \\ --path = staging-cluster Example output: $ tk bootstrap github --owner=gitopsrun --repository=fleet-infra --path=staging-cluster --team=devs \u25ba connecting to github.com \u2714 repository created \u2714 devs team access granted \u2714 repository cloned \u271a generating manifests \u2714 components manifests pushed \u25ba installing components in gitops-system namespace namespace/gitops-system created customresourcedefinition.apiextensions.k8s.io/gitrepositories.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/helmcharts.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/helmrepositories.source.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/kustomizations.kustomize.fluxcd.io created customresourcedefinition.apiextensions.k8s.io/profiles.kustomize.fluxcd.io created role.rbac.authorization.k8s.io/crd-controller-gitops-system created rolebinding.rbac.authorization.k8s.io/crd-controller-gitops-system created clusterrolebinding.rbac.authorization.k8s.io/cluster-reconciler-gitops-system created service/source-controller created deployment.apps/kustomize-controller created deployment.apps/source-controller created networkpolicy.networking.k8s.io/deny-ingress created Waiting for deployment \"source-controller\" rollout to finish: 0 of 1 updated replicas are available... deployment \"source-controller\" successfully rolled out deployment \"kustomize-controller\" successfully rolled out \u2714 install completed \u25ba configuring deploy key \u2714 deploy key configured \u25ba generating sync manifests \u2714 sync manifests pushed \u25ba applying sync manifests \u25ce waiting for cluster sync \u2714 bootstrap finished If you prefer GitLab, export GITLAB_TOKEN env var and use the command tk bootstrap gitlab . It is safe to run the bootstrap command as many times as you want. If the toolkit components are present on the cluster, the bootstrap command will perform an upgrade if needed.","title":"Staging bootstrap"},{"location":"get-started/#staging-workflow","text":"Clone the repository with: git clone https://github.com/ $GITHUB_USER /fleet-infra cd fleet-infra Create a git source pointing to a public repository master branch: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --branch = master \\ --interval = 30s \\ --export > ./staging-cluster/webapp-source.yaml Create a kustomization for synchronizing the common manifests on the cluster: tk create kustomization webapp-common \\ --source = webapp \\ --path = \"./deploy/webapp/common\" \\ --prune = true \\ --validate = client \\ --interval = 1h \\ --export > ./staging-cluster/webapp-common.yaml Create a kustomization for the backend service that depends on common: tk create kustomization webapp-backend \\ --depends-on = webapp-common \\ --source = webapp \\ --path = \"./deploy/webapp/backend\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/backend.webapp\" \\ --health-check-timeout = 2m \\ --export > ./staging-cluster/webapp-backend.yaml Create a kustomization for the frontend service that depends on backend: tk create kustomization webapp-frontend \\ --depends-on = webapp-backend \\ --source = webapp \\ --path = \"./deploy/webapp/frontend\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/frontend.webapp\" \\ --health-check-timeout = 2m \\ --export > ./staging-cluster/webapp-frontend.yaml Push changes to origin: git add -A && git commit -m \"add staging webapp\" && git push In about 30s the synchronization should start: $ watch tk get kustomizations \u2714 gitops-system last applied revision master/35d5765a1acb9e9ce66cad7274c6fe03eee1e8eb \u2714 webapp-backend reconciling \u2714 webapp-common last applied revision master/f43f9b2eb6766e07f318d266a99d2ec7c940b0cf \u2717 webapp-frontend dependency 'gitops-system/webapp-backend' is not ready When the synchronization finishes you can check that the webapp services are running: $ kubectl -n webapp get deployments,services NAME READY UP-TO-DATE AVAILABLE AGE deployment.apps/backend 1/1 1 1 4m1s deployment.apps/frontend 1/1 1 1 3m31s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/backend ClusterIP 10.52.10.22 <none> 9898/TCP,9999/TCP 4m1s service/frontend ClusterIP 10.52.9.85 <none> 80/TCP 3m31s From this moment forward, any changes made to the webapp master branch will be synchronised with the cluster. If a Kubernetes manifest is removed from source, the reconclier will remove it from your cluster. If you delete a kustomization from the fleet infra repo, the reconciler will remove all Kubernetes objects that were previously applied from that kustomization. If you alter the webapp deployment using kubectl edit , the changes will be reverted to match the state described in git. When dealing with an incident, you can pause the recitation of a kustomization with tk suspend kustomization <name> . Once the debugging session is over, you can re-enable the reconciliation with tk resume kustomization <name> .","title":"Staging workflow"},{"location":"get-started/#production-bootstrap","text":"On production clusters, you may wish to deploy stable releases of an application. When creating a git source instead of a branch, you can specify a git tag or a semver expression. Change your kubectl context to a different cluster and run the bootstrap for the production environment: tk bootstrap github \\ --owner = $GITHUB_USER \\ --repository = fleet-infra \\ --path = prod-cluster \\ --personal Pull the changes locally: git pull","title":"Production bootstrap"},{"location":"get-started/#production-workflow","text":"Create a git source using a semver range to target stable releases: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --tag-semver = \">=4.0.0 <4.0.2\" \\ --interval = 30s \\ --export > ./prod-cluster/webapp-source.yaml Create a kustomization for webapp pointing to the production overlay: tk create kustomization webapp \\ --source = webapp \\ --path = \"./deploy/overlays/production\" \\ --prune = true \\ --validate = client \\ --interval = 10m \\ --health-check = \"Deployment/frontend.production\" \\ --health-check = \"Deployment/backend.production\" \\ --health-check-timeout = 2m \\ --export > ./prod-cluster/webapp-production.yaml Push changes to origin: git add -A && git commit -m \"add prod webapp\" && git push List git sources: $ tk get sources git \u2714 gitops-system last fetched revision master/99072ee132abdead8b7799d7891eae2f524eb73d \u2714 webapp last fetched revision 4.0.1/113360052b3153e439a0cf8de76b8e3d2a7bdf27 The kubectl equivalent is kubectl -n gitops-system get gitrepositories . List kustomization: $ tk get kustomizations \u2714 gitops-system last applied revision master/99072ee132abdead8b7799d7891eae2f524eb73d \u2714 webapp last applied revision 4.0.1/113360052b3153e439a0cf8de76b8e3d2a7bdf27 The kubectl equivalent is kubectl -n gitops-system get kustomizations . If you want to upgrade to the latest 4.x version, you can change the semver expression to: tk create source git webapp \\ --url = https://github.com/stefanprodan/podinfo \\ --tag-semver = \">=4.0.0 <5.0.0\" \\ --interval = 30s \\ --export > ./prod-cluster/webapp-source.yaml git add -A && git commit -m \"update prod webapp\" && git push Trigger a git sync: $ tk sync ks gitops-system --with-source \u25ba annotating source gitops-system \u2714 source annotated \u25ce waiting for git sync \u2714 git sync completed \u2714 fetched revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 \u25ce waiting for kustomization sync \u2714 kustomization sync completed \u2714 applied revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 The kubectl equivalent is kubectl -n gitops-system annotate gitrepository/gitops-system source.fluxcd.io/syncAt=\"$(date +%s)\" . Wait for the webapp to be upgraded: $ watch tk get kustomizations \u2714 gitops-system last applied revision master/d751ea264d48bf0db8b588d1d08184834ac8fec9 \u2714 webapp last applied revision 4.0.5/f43f9b2eb6766e07f318d266a99d2ec7c940b0cf","title":"Production workflow"},{"location":"internal/release/","text":"Release \u00b6 To release a new version the following steps should be followed: Create a <next semver> tag form master and push it to remote. Confirm CI builds and releases the newly tagged version.","title":"Release"},{"location":"internal/release/#release","text":"To release a new version the following steps should be followed: Create a <next semver> tag form master and push it to remote. Confirm CI builds and releases the newly tagged version.","title":"Release"}]}